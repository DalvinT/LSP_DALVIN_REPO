package org.howard.edu.lsp.finalexam.question1;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;

public class MathUtilsTest {
    private MathUtils utils;

    @BeforeEach
    public void setUp() {
        utils = new MathUtils();
    }

    @Test
    @DisplayName("Test factorial for valid inputs")
    public void testFactorial_validInputs() {
        assertEquals(1, utils.factorial(0), "Factorial of 0 should be 1");
        assertEquals(1, utils.factorial(1), "Factorial of 1 should be 1");
        assertEquals(120, utils.factorial(5), "Factorial of 5 should be 120");
    }

    @Test
    @DisplayName("Test factorial for negative input")
    public void testFactorial_negativeInput() {
        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            utils.factorial(-5);
        });
        assertEquals("Number must be non-negative", exception.getMessage());
    }

    @Test
    @DisplayName("Test isPrime for valid primes")
    public void testIsPrime_validPrimes() {
        assertTrue(utils.isPrime(2), "2 is a prime number");
        assertTrue(utils.isPrime(17), "17 is a prime number");
    }

    @Test
    @DisplayName("Test GCD for typical inputs")
    public void testGcd_validInputs() {
        assertEquals(5, utils.gcd(10, 5), "GCD of 10 and 5 should be 5");
        assertEquals(1, utils.gcd(13, 7), "GCD of 13 and 7 should be 1");
    }

    @Test
    @DisplayName("Test GCD with zero inputs")
    public void testGcd_withZeroInput() {
        assertEquals(10, utils.gcd(10, 0), "GCD of 10 and 0 should be 10");
    }
}
